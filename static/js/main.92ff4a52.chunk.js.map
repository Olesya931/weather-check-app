{"version":3,"sources":["components/SearchBar.js","img/arrow.svg","img/bookmark.svg","components/Guide.js","components/Favorite.js","img/logo.svg","components/HomePage.js","img/barometer.svg","data/sprite.svg","components/WeatherPage.js","img/thunderstorm.svg","img/drizzle.svg","img/rain.svg","img/snow.svg","img/squall.svg","img/clear.svg","img/clouds.svg","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","useState","filteredData","setFilteredData","className","onChange","event","searchInput","target","value","matches","length","cities","filter","regex","RegExp","name","match","placeholder","type","map","key","to","pathname","state","Guide","src","arrow","alt","bookmark","Favorite","favorite","setFavorite","getWeatherIcon","weather","history","useHistory","item","index","onClick","cityName","push","Math","round","main","temp","id","HomePage","useEffect","localStorage","getItem","setItem","JSON","stringify","weatherFavorite","parse","href","logo","WeatherPage","location","useLocation","weatherInfo","setWeatherInfo","toggleButton","setToggleButton","undefined","city","fetch","then","res","json","data","console","log","indexOf","exact","sprite","e","newFavorite","saveWeather","description","barometr","pressure","unixTime","date","Date","getHours","getMinutes","substr","convertTime","sys","sunset","App","setWeather","img","clear","thunderstorm","drizzle","rain","snow","squall","clouds","saveToLocalStorage","requests","Promise","all","r","items","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ff4a52.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cities from '../data/cities.json';\r\n\r\nimport '../styles/css/SearchBar.css';\r\n\r\nconst SearchBar = () => {\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    // Автокомплит\r\n    const handleFilter = (event) => {\r\n        const searchInput = event.target.value;\r\n        let matches = [];\r\n\r\n        if (searchInput.length > 2) {\r\n            matches = cities.filter((value) => {\r\n                const regex = new RegExp(`^${searchInput}`, 'gi');\r\n                return value.name.match(regex);\r\n            })\r\n        }\r\n        if (searchInput === \"\") {\r\n            setFilteredData([]);\r\n        } else {\r\n            setFilteredData(matches);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"search\">\r\n                <div className=\"container\">\r\n                    <div className=\"search__inner\">\r\n                        <input className=\"search__input\" onChange={handleFilter} placeholder=\"Укажите город\" type=\"text\" />\r\n                    </div>\r\n\r\n                    {filteredData.length !== 0 && (\r\n                        <div className=\"search__result\">\r\n\r\n                            <ul className=\"result__list\">\r\n                                {\r\n                                    filteredData.map((value, key) => {\r\n                                        return (\r\n                                            // Переход на страницу города при клике\r\n                                            <NavLink to={{\r\n                                                pathname: \"/weather\",\r\n                                                state: { name: value.name }\r\n                                            }} className=\"result__link\" key={key}>\r\n                                                <li className=\"result__item\">{value.name}</li>\r\n                                            </NavLink>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar","export default __webpack_public_path__ + \"static/media/arrow.141c4ebf.svg\";","export default __webpack_public_path__ + \"static/media/bookmark.d2700225.svg\";","import React from 'react';\r\nimport arrow from '../img/arrow.svg';\r\nimport bookmark from '../img/bookmark.svg';\r\n\r\nimport '../styles/css/Guide.css';\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <>\r\n            <div className=\"descr\">\r\n                <div className=\"container\">\r\n                    <div className=\"descr__inner\">\r\n                        <div className=\"descr__arrow\">\r\n                            <img className=\"descr__arrow-img\" src={arrow} alt=\"Arrow\" />\r\n                        </div>\r\n                        <div className=\"descr__text\">Начните вводить город, например, <span className=\"descr__text-example\">Ижевск</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bookmark\">\r\n                <div className=\"container\">\r\n                    <div className=\"bookmark__inner\">\r\n                        <div className=\"bookmark__text\">Используйте значок «закладки», чтобы закрепить город на главной</div>\r\n                        <div className=\"bookmark__icon\"><img className=\"bookmark__icon-img\" src={bookmark} alt=\"Bookmark\" /></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Guide;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport '../styles/css/Favorite.css';\r\n\r\n\r\nconst Favorite = ({favorite, setFavorite, getWeatherIcon, weather}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  // переход на страницу города и передача названия города \r\n  function handleClickFavorite(cityName) {\r\n    history.push({\r\n      pathname: '/weather',\r\n      state: {  \r\n        name: cityName,\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"favorite\">\r\n      <div className=\"container\">\r\n        <div className=\"favorite__inner\">\r\n          {weather && weather.map((item, index) => {\r\n            return (\r\n              <div className=\"favorite__item\" key={index} onClick={() => handleClickFavorite(item.name)}>\r\n                <div className=\"favorite__city\">{item.name}</div>\r\n                <div className=\"favorite__temperature\">{Math.round(item.main.temp)}&deg;</div>\r\n                <div className=\"favorite__icon\"><img className=\"favorite__icon-img\" src={getWeatherIcon(item.weather[0].id)} alt=\"Weather icon\" /></div>\r\n              </div>);\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Favorite;","export default __webpack_public_path__ + \"static/media/logo.0dbe5e4a.svg\";","import React, { useEffect } from 'react'\r\nimport SearchBar from './SearchBar';\r\nimport Guide from './Guide';\r\nimport Favorite from './Favorite';\r\nimport logo from '../img/logo.svg';\r\n\r\nimport '../styles/css/Header.css';\r\n\r\n\r\n\r\n\r\nconst HomePage = ({ favorite, setFavorite, getWeatherIcon, weather }) => {\r\n\r\n    // получение из LocalStorage избранных городов\r\n    useEffect(() => {\r\n        if (localStorage.getItem('weather-favorites') === null) {\r\n            localStorage.setItem('weather-favorites', JSON.stringify([]));\r\n        } else {\r\n            let weatherFavorite = JSON.parse(localStorage.getItem('weather-favorites'));\r\n            setFavorite(weatherFavorite);\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <header className=\"header\">\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <a className=\"logo__link\" href=\"#\" >\r\n                            <img className=\"logo__img\" src={logo} alt=\"Weather check\" />\r\n                            <span className=\"logo__text\">WeatherCheck</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <SearchBar />\r\n            {/* Если в избранное добавлены города, то выводим их  */}\r\n            {\r\n                favorite.length === 0 ? <Guide /> : <Favorite favorite={favorite} setFavorite={setFavorite} getWeatherIcon={getWeatherIcon} weather={weather} />\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/barometer.eea18929.svg\";","export default __webpack_public_path__ + \"static/media/sprite.02b88646.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useLocation, Redirect } from 'react-router-dom';\r\nimport barometr from '../img/barometer.svg';\r\nimport logo from '../img/logo.svg';\r\n\r\nimport sprite from \"../data/sprite.svg\";\r\nimport '../styles/css/WeatherPage.css'\r\nimport '../styles/css/Header.css';\r\n\r\nconst WeatherPage = ({ favorite, setFavorite, getWeatherIcon }) => {\r\n    let location = useLocation();\r\n\r\n    const [weatherInfo, setWeatherInfo] = useState();\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n\r\n    // получение информации о погоде в выбранном городе\r\n    useEffect(() => {\r\n        let weatherFavorite = JSON.parse(localStorage.getItem('weather-favorites'));\r\n        setFavorite(weatherFavorite);\r\n        const key = '05f0d827dc5191cc155093b4e7a2f37f';\r\n        if (location.state !== undefined) {\r\n            let city = location.state.name;\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}&lang=ru&units=metric`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    setWeatherInfo(data);\r\n                });\r\n                if (favorite.indexOf(city) === -1) {\r\n                    setToggleButton(false);\r\n                } else {\r\n                    setToggleButton(true);\r\n                    \r\n                }\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    //если город не был введен, то перенаправление обратно на главную страницу\r\n    if (location.state === undefined) {\r\n        return <Redirect exact to=\"/\" />\r\n    }\r\n\r\n    //сохранить город в закладки, если он еще не сохранен. если уже сохранен, то удалить из закладок\r\n    const saveWeather = (weather) => {\r\n        if (favorite.indexOf(weather) === -1) {\r\n            const newFavorite = [...favorite, weather];\r\n            setFavorite(newFavorite);\r\n        } else {\r\n            setFavorite(favorite.filter(item => item !== weather));\r\n        }\r\n        setToggleButton(!toggleButton);\r\n    }\r\n\r\n    \r\n\r\n    // перевод времени заката из юникс \r\n    const convertTime = (unixTime) => {\r\n        let date = new Date((unixTime * 1000));\r\n        let hours = date.getHours();\r\n        let minutes = \"0\" + date.getMinutes();\r\n        let formattedTime = hours + \":\" + minutes.substr(-2);\r\n        return formattedTime;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header__weather\">\r\n                <div className=\"container\">\r\n                    <div className=\"logo\">\r\n                        <a className=\"logo__link\" href=\"#\" >\r\n                            <img className=\"logo__img\" src={logo} alt=\"Weather check\" />\r\n                            <span className=\"logo__text\">WeatherCheck</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"weather-page\">\r\n\r\n                <div className=\"head\">\r\n                    <div className=\"container\">\r\n                        <div className=\"head__inner\">\r\n                            <NavLink to=\"/\" className=\"head__back\">\r\n                                <svg className=\"head__back-img\">\r\n                                <use href={sprite + \"#back\"} />\r\n                                </svg>\r\n                                <span className=\"head__back-text\">Назад</span>\r\n                            </NavLink>\r\n                            <button className=\"head__bookmark\" onClick={(e) => saveWeather(weatherInfo.name)}>\r\n                                <svg className={toggleButton ? \"head__bookmark-img head__bookmark-img_toggle\" : \"head__bookmark-img\"}>\r\n                                    <use href={sprite + \"#bookmark\"} />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"weather\">\r\n                    <div className=\"container\">\r\n                        {weatherInfo && (\r\n                            <div className=\"weather__inner\">\r\n                                <div className=\"weather__name\">{weatherInfo.name}</div>\r\n                                <div className=\"weather__description\">{weatherInfo.weather[0].description}</div>\r\n                                <div className=\"weather__main\">\r\n                                    <div className=\"weather__temperature\">{Math.round(weatherInfo.main.temp)}&deg;</div>\r\n                                    <div className=\"weather__icon\"><img className=\"weather__icon-img\" src={getWeatherIcon(weatherInfo.weather[0].id)} alt=\"weather icon\" /></div>\r\n                                </div>\r\n                                <div className=\"weather__pressure\">\r\n                                    <img src={barometr} alt=\"barometr\" className=\"weather__pressure-icon\" />\r\n                                    <div className=\"weather__pressure-value\">{Math.round(weatherInfo.main.pressure * 0.75)} мм рт. ст.</div>\r\n                                </div>\r\n                                <div className=\"weather__sunset\">Закат в {convertTime(weatherInfo.sys.sunset)}</div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherPage;\r\n","export default __webpack_public_path__ + \"static/media/thunderstorm.0f90e700.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.804b150c.svg\";","export default __webpack_public_path__ + \"static/media/rain.2b11bcfc.svg\";","export default __webpack_public_path__ + \"static/media/snow.6d437dd8.svg\";","export default __webpack_public_path__ + \"static/media/squall.f29614ad.svg\";","export default __webpack_public_path__ + \"static/media/clear.f8013954.svg\";","export default __webpack_public_path__ + \"static/media/clouds.2bf70699.svg\";","import { useState, useEffect } from 'react';\nimport { Route, BrowserRouter, HashRouter } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport WeatherPage from './components/WeatherPage';\nimport thunderstorm from './img/thunderstorm.svg';\nimport drizzle from './img/drizzle.svg';\nimport rain from './img/rain.svg';\nimport snow from './img/snow.svg';\nimport squall from './img/squall.svg';\nimport clear from './img/clear.svg';\nimport clouds from './img/clouds.svg';\nimport logo from './img/logo.svg';\n// import './styles/css/Header.css';\n\n\n\n\nconst App = () => {\n\n  const [favorite, setFavorite] = useState([]);\n  const [weather, setWeather] = useState();\n\n// получение изображения погоды по id\n  const getWeatherIcon = (id)=>{\n    let img = clear;\n      if(id>=200&&id<=232){\n        img = thunderstorm;\n      } else if(id>=300&&id<=321){\n        img = drizzle;\n      } else if(id>=500&&id<=531){\n        img = rain;\n      }else if(id>=600&&id<=622){\n        img = snow;\n      }else if(id>=701&&id<=781){\n        img = squall;\n      }else if(id===800){\n        img = clear;\n      }else if(id>=801&&id<=804){\n        img = clouds;\n      }\n      return img;\n  }\n\n\n// получение данных об \"избранных\" городах\n  useEffect(() => {\n    saveToLocalStorage(favorite);\n    const key = '50a7aa80fa492fa92e874d23ad061374';\n    if (favorite.length === 0) return;\n    let requests = favorite.map(item => fetch(`https://api.openweathermap.org/data/2.5/weather?q=${item}&appid=${key}&lang=ru&units=metric`));\n    Promise.all(requests)\n      .then(res => Promise.all(res.map(r => r.json())))\n      .then(data => {\n        setWeather(data);\n      })\n  }, [favorite]);\n\n\n\n// сохранение \"избранных\" городов в LocaStorage\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem('weather-favorites', JSON.stringify(items));\n  }\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Route exact path=\"/\">\n          <HomePage \n          favorite={favorite}\n          setFavorite={setFavorite}\n          getWeatherIcon={getWeatherIcon}\n          weather={weather}/>\n        </Route>\n        <Route exact path=\"/weather\">\n          <WeatherPage\n            favorite={favorite}\n            setFavorite={setFavorite}\n            getWeatherIcon={getWeatherIcon}\n          />\n        </Route>\n      </div>\n    </HashRouter>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}